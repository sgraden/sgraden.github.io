@import "font-awesome-4.7.0/scss/font-awesome.scss";

body,
html {
  padding: 0;
  margin: 0;
}

#container {
  min-height: 100vh;
  background-color: royalblue;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: white;
}

h1 {
    font-family: 'Roboto', sans-serif;
    letter-spacing: .1rem;
}

p {
  color: white;
  font-size: 1.5rem;
  text-align: center;
  font-weight: 300;
  max-width: 800px;
  font-family: 'Open Sans', sans-serif;
  margin: .3rem 0;
}

a {
    color: white;
    transition: all 300ms ease-in-out;

    &:hover {
        color: #fbb685;
    }
}

footer {
    margin-top: 1.5rem;
    a {
        font-size: 3rem;
        margin: 0 8px;
    }
}


$spinner-color-1: #fed;
$spinner-color-2: #ff8e3e;
$box-size: 70px;
$border-size: $box-size / 6;
$spinner-size: $box-size - (2 * $border-size);
$size-modifier: 20px;

.spinner-container {
  margin: 40px 0;

  .circle {
    margin: 10px 0;
    height: $box-size;
    width: $box-size;
    position: relative;

    &::after,
    &::before {
      content: '';
      display: block;
      border-radius: 50%;
      position: absolute;
      height: $spinner-size;
      width: $spinner-size;
      border: $border-size solid transparent;
      animation-duration: 12s;
      animation-iteration-count: 4;
      animation-timing-function: ease-in-out;
    }

    &::after {
      border-top-color: $spinner-color-1;
      border-bottom-color: $spinner-color-1;
      animation-name: inner-ring;
      animation-direction: alternate;
    }

    &::before {
      border-left-color: $spinner-color-2;
      border-right-color: $spinner-color-2;
      animation-name: outer-ring;
      animation-direction: alternate-reverse;
    }
  }
}
/*animation*/
$rotation: 720deg;
@mixin locked() {
  width: $spinner-size;
  height: $spinner-size;
  top: 0;
  left: 0;
}
@mixin unlocked($modifier) {
  $modified-size: $spinner-size + $modifier;
  width: $modified-size;
  height: $modified-size;
  top: -($modifier/2);
  left: -($modifier/2);
}
@keyframes inner-ring {
  10% {
    @include locked();
    transform: rotate(0deg);
  }

  15%,
  90% {
    @include unlocked(30px);
  }

  90% {
    transform: rotate($rotation);
  }

  100%,
  95% {
    @include locked();
    transform: rotate($rotation);
  }
}
@keyframes outer-ring {
  10% {
    @include locked();
    transform: rotate(0deg);
  }

  15%,
  90% {
    @include unlocked(60px);
  }

  90% {
    transform: rotate($rotation);
  }

  100%,
  95% {
    @include locked();
    transform: rotate($rotation);
  }
}
